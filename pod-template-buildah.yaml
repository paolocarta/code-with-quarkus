apiVersion: "v1"
kind: "Pod"
metadata:
  labels:
    jenkins: "slave"
    jenkins/label: "buildah-x86"
spec:
  containers:
  - args:
    - "9999999"
    command:
    - "sleep"
    image: "quay.io/buildah/stable:v1.23.1"
    imagePullPolicy: "IfNotPresent"
    name: "buildah"
    resources:
      limits: {}
      requests: {}
    securityContext:
      privileged: true
    tty: true
    volumeMounts:
    - mountPath: "/var/lib/containers"
      name: "container-layers-volume"
      readOnly: false
    - mountPath: "/tmp"
      name: "source-code-volume"
      readOnly: false
    workingDir: "/tmp"
  - image: "image-registry.openshift-image-registry.svc:5000/openshift/jenkins-agent-base:latest"
    imagePullPolicy: "Always"
    name: "jnlp"
    tty: false
    securityContext:
      privileged: true
    env:
      - name: CURL_CA_BUNDLE
        value: /var/certs/ca-bundle.crt
      - name: JAVA_FIPS_OPTIONS
        value: "-Dcom.redhat.fips=false -Djavax.net.ssl.trustStore=/var/certs/java/cacerts -Djavax.net.ssl.trustStorePassword=changeit"
    volumeMounts:
    - mountPath: "/var/lib/containers"
      name: "container-layers-volume"
      readOnly: false
    - mountPath: "/tmp"
      name: "source-code-volume"
      readOnly: false
    - name: "volume-ca-bundle"
      mountPath: "/var/certs/"      
    - name: "volume-cacerts"
      mountPath: "/var/certs/java"
    workingDir: "/tmp"
  nodeSelector:
    kubernetes.io/os: "linux"
  restartPolicy: "Never"
  serviceAccountName: "jenkins-agent"
  volumes:
  - name: "container-layers-volume"
    persistentVolumeClaim:
      claimName: "container-layers"
      readOnly: false
  - name: "source-code-volume"
    persistentVolumeClaim:
      claimName: "source-code"
      readOnly: false
  - name: volume-ca-bundle
    configMap:
      name: ca-bundle
  - name: volume-cacerts
    configMap:
      name: java-keystore